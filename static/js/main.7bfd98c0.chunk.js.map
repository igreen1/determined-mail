{"version":3,"sources":["components/profiles/profile1.png","components/profiles/profile2.png","components/profiles/profile3.png","components/profiles/profile4.png","components/profiles/profile5.png","components/profiles/profile6.png","components/profiles/profile7.png","components/profiles/profile8.png","components/profiles/profile9.png","components/profiles/profile10.png","hardcodedEmails.js","components/EmailItem.js","components/EmailList.js","components/pages/WriteEmail.js","components/layout/logo.png","components/pages/ReadEmail.js","components/layout/SideNav.js","App.js","useEmails.js","reportWebVitals.js","index.js"],"names":["allEmails","id","profile","src","profile2","alt","height","width","from","subject","body","selected","page","profile3","profile9","profile10","profile1","profile5","profile6","profile7","profile8","profile4","to","EmailItem","emailInfo","email","deleteEmail","selectEmail","className","aria-label","Fragment","type","checked","onClick","size","EmailList","emails","sort","a","b","map","WriteEmail","sendEmail","saveDraft","history","useHistory","useParams","filter","Number","useState","setTo","cc","setCC","bcc","setBCC","setBody","setSubject","value","style","EmailValidator","placeholder","onChange","event","target","message","alert","send","console","log","push","ReadEmail","useStyles","makeStyles","dividerColor","backgroundColor","selectedItemStyle","color","listItemText","fontSize","SideNav","classes","window","location","pathname","substring","React","selectedIndex","setSelectedIndex","handleListItemClick","index","root","List","component","Divider","ListItem","Link","button","ListItemIcon","ListItemText","primary","App","initialValue","setEmails","allSelected","length","grabPage","moveToTrash","key","permaDeleteEmail","permaDeleteSelected","toggleSelectAll","newState","selectedToSpam","selectedToTrash","selectedToInbox","newEmail","draftEmail","Date","now","useEmails","hardcodedEmails","logo","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bfd98c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile1.c363c6eb.png\";","export default __webpack_public_path__ + \"static/media/profile2.018465c9.png\";","export default __webpack_public_path__ + \"static/media/profile3.b6906355.png\";","export default __webpack_public_path__ + \"static/media/profile4.7467eeb0.png\";","export default __webpack_public_path__ + \"static/media/profile5.58f57aa8.png\";","export default __webpack_public_path__ + \"static/media/profile6.b0487a5a.png\";","export default __webpack_public_path__ + \"static/media/profile7.99c0156b.png\";","export default __webpack_public_path__ + \"static/media/profile8.34c87149.png\";","export default __webpack_public_path__ + \"static/media/profile9.9b09eaa2.png\";","export default __webpack_public_path__ + \"static/media/profile10.2b70f387.png\";","import React from \"react\"\n\nimport profile1 from \"./components/profiles/profile1.png\"\nimport profile2 from \"./components/profiles/profile2.png\"\nimport profile3 from \"./components/profiles/profile3.png\"\nimport profile4 from \"./components/profiles/profile4.png\"\nimport profile5 from \"./components/profiles/profile5.png\"\nimport profile6 from \"./components/profiles/profile6.png\"\nimport profile7 from \"./components/profiles/profile7.png\"\nimport profile8 from \"./components/profiles/profile8.png\"\nimport profile9 from \"./components/profiles/profile9.png\"\nimport profile10 from \"./components/profiles/profile10.png\"\n\nconst allEmails = [\n\n        {\n            id: 1,\n            profile: <img src={profile2} alt=\"profile1\" height=\"60\" width=\"60\" />,\n            from: \"Leigh Lewis\",\n            subject: \"How are you?\",\n            body: `Hi! I wanted to reach out because we have not talked in forever. How have you been? Would you want to grab some coffee? \\n \\n Best, \\n Leigh`,\n            selected: false,\n            page: 'inbox'\n        },\n        {\n            id: 2,\n            profile: <img src={profile3} alt=\"profile1\" height=\"60\" width=\"60\" />,\n            from: \"Nolan Jacobs Walker\",\n            body: \"Hey . . . unfortunately, I won't be able to make it to class today, so is there any chance you could send me your notes after class? \\n Thank you so much! \\n \\n Best, \\n Nolan\",\n            subject: \"Class Today\",\n            selected: false,\n            page: 'inbox'\n        },\n        {\n            id: 5,\n            profile: <img src={profile9} alt=\"profile9\" height=\"60\" width=\"60\" />,\n            from: \"Taylor Flanagan\",\n            body: `Hey! I really am struggling with some calc II homework. Is there any chance you could help me out? I specifically need help with series . . . \\n \\n Best, \\n Taylor`,\n            subject: \"Help with Homework\",\n            selected: false,\n            page:'inbox'\n        },\n        {\n            id: 10,\n            profile: <img src={profile10} alt=\"profile1\" height=\"60\" width=\"60\" />,\n            from: \"Megan West\",\n            body: \"Hey!! I took a course last semester that I think you will really like. It's called Deep Learning! You should definitely take it! \\n \\n Megan\",\n            subject: \"Take DEEP LEARNING\",\n            selected: false,\n            page: 'inbox'\n        },\n        {\n            id: 3,\n            profile: <img src={profile1} alt=\"profile1\" height=\"60\" width=\"60\" />,\n            from: \"Nicole Infantino\",\n            body: \"Hey, I really don't know how to do homework for our biology class. Could you please help me? \\n Thank you! \\n Nicole\",\n            subject: \"Homework\",\n            selected: false,\n            page: 'inbox'\n          },\n          {\n            id: 4,\n            profile: <img src={profile5} alt=\"profile1\" height=\"60\" width=\"60\" />,\n            from: \"Dr. Trevor Zink\",\n            body: \"Hello, Could you please grade the section 4 essays before next Tuesday? \\n Thank you, \\n Dr. Zink\",\n            subject: \"TA Grading\",\n            selected: false,\n            page: 'inbox'\n          },\n          {\n            id: 6,\n            profile: <img src={profile6} alt=\"profile6\" height=\"60\" width=\"60\" />,\n            from: \"SNAIL MAIL\",\n            body: \"You should buy a snail!!\",\n            subject: \"SPAMMMMMY\",\n            selected: false,\n            page: 'spam'\n          },\n          {\n            id: 7,\n            profile: <img src={profile7} alt=\"profile7\" height=\"60\" width=\"60\" />,\n            from: \"Jack Manson\",\n            body: \"COMPLETE this survey for my class!\",\n            subject: \"Complete this Survey\",\n            selected: false,\n            page: 'deleted'\n          },\n          {\n            id: 8,\n            profile: <img src={profile8} alt=\"profile8\" height=\"60\" width=\"60\" />,\n            from: \"Jenny Little\",\n            body: \"Hey! I lost my air pods. Have you seen them anywhere? \\n Let me know, \\n Jenny\",\n            subject: \"Lost Items\",\n            selected: false,\n            page: 'deleted'\n          },\n          {\n            id: 187178,\n            profile: <img src={profile4} alt=\"profile8\" height=\"60\" width=\"60\" />,\n            to:\"Alison Lewis\",\n            body: \"Hello there!\",\n            subject: \"Recipes\",\n            selected: false,\n            page: 'draft',\n          },\n]\nexport default allEmails;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { BsFillTrashFill } from 'react-icons/bs'\nimport { Link } from 'react-router-dom'\n\nimport './EmailItem.css'\n\nconst EmailItem = ({ email, deleteEmail, selectEmail }) => {\n  let emailInfo\n  if (email.page === 'draft' || email.to) {\n    //draft page, display 'to' not 'from'\n    emailInfo = (\n      <Link className=\"link\" to={`/new/${email?.id}`}>\n        <div className=\"to\" aria-label={`To: ${email?.to}`}>To: {email?.to}</div>\n        <div className=\"subject\" aria-label={`subject: ${email?.subject}`}>Subject: {email?.subject}</div>\n      </Link>\n    )\n  } else {\n    //not draft page, display 'from' not 'to'\n    emailInfo = (\n      <Link className=\"link\" to={`/email/${email.id}`}>\n        <div className=\"profile\">{email.profile}</div>\n        <div className=\"from\" aria-label={`From: ${email.from}`}>From: {email.from}</div>\n        <div className=\"subject\" aria-label={`subject: ${email.subject}`}>Subject: {email.subject}</div>\n      </Link>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"email\">\n          <input\n            aria-label=\"Checkbox to select this email\"\n            className=\"select\"\n            type=\"checkbox\"\n            checked={!!email.selected}\n            onClick={() => {\n              selectEmail(email.id)\n            }}\n          />{' '}\n          {emailInfo}\n          <BsFillTrashFill\n            aria-label=\"Move to trash\"\n            className=\"delete\"\n            size={32}\n            onClick={() => {\n              deleteEmail(email.id)\n            }}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nEmailItem.propTypes = {\n  email: PropTypes.object.isRequired,\n  selectEmail: PropTypes.func.isRequired,\n  deleteEmail: PropTypes.func.isRequired,\n}\n\nexport default EmailItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport EmailItem from './EmailItem'\n\nconst EmailList = ({emails, deleteEmail, selectEmail}) => {\n  return emails.sort((a,b) => a.id - b.id)\n  .map((email) => (\n    <EmailItem key={email.id} email={email} deleteEmail={deleteEmail} selectEmail={selectEmail} />\n  ))\n}\n\nEmailList.propTypes = {\n  emails: PropTypes.array.isRequired,\n  selectEmail: PropTypes.func.isRequired,\n  deleteEmail: PropTypes.func.isRequired,\n}\n\nexport default EmailList\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport * as EmailValidator from 'email-validator'\nimport './WriteEmail.css'\n\nconst WriteEmail = ({ sendEmail, saveDraft, emails }) => {\n  const history = useHistory()\n\n  let email\n  if (emails) {\n    const { id } = useParams()\n    ;[email] = emails.filter((email) => email.id === Number(id))\n  }\n  //make custom hook :)\n  const [to, setTo] = email ? useState(email.to) : useState('')\n  const [cc, setCC] = email ? useState(email.cc) : useState('')\n  const [bcc, setBCC] = email ? useState(email.bcc) : useState('')\n  const [body, setBody] = email ? useState(email.body) : useState('')\n  const [subject, setSubject] = email ? useState(email.subject) : useState('')\n\n  const send = (email)=>{\n    let message = '';\n    if(!EmailValidator.validate(email.to))\n      message += `Recipient '${email.to}' is invalid\\n`\n    \n    if(!EmailValidator.validate(email.cc) && email.cc !== '')\n      message += `CC '${email.cc}' is invalid\\n`\n    \n    if(!EmailValidator.validate(email.bcc) && email.bcc !== '')\n      message += `BCC '${email.bcc}' is invalid\\n`\n    \n\n    if(message !== ''){\n      alert(message)\n    }\n      \n    // Only warn them, send anyways :)\n    // It's their choice to send to a bad email address, not ours\n    return sendEmail(email);\n  }\n\n  return (\n    <div>\n      <div className=\"textfieldContainer\">\n        <label className=\"label\" aria-label=\"Enter email recipient here\">\n          <b>To:</b>\n        </label>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={to}\n          style = {{'background-color': EmailValidator.validate(to) || to==='' ? '#fff': '#d4d4d4'}}\n          placeholder=\"Enter your email recipient here\"\n          onChange={(event) => setTo(event.target.value)}\n        />\n      </div>\n      <div className=\"textfieldContainer\">\n        <label\n          className=\"label\"\n          aria-label=\"Enter CC, carbon copy, recipient here\"\n        >\n          <b>CC:</b>\n        </label>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={cc}\n          style = {{'background-color': EmailValidator.validate(cc) || cc==='' ? '#fff': '#d4d4d4'}}\n          placeholder=\"Enter your CC recipient here\"\n          onChange={(event) => setCC(event.target.value)}\n        />\n      </div>\n      <div className=\"textfieldContainer\">\n        <label\n          className=\"label\"\n          aria-label=\"Enter BCC, blind carbon copy, recipient here\"\n        >\n          <b>BCC:</b>\n        </label>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={bcc}\n          style = {{'background-color': EmailValidator.validate(bcc) || bcc==='' ? '#fff': '#d4d4d4'}}\n          onChange={(event) => setBCC(event.target.value)}\n          placeholder=\"Enter your BCC recipient here\"\n        />\n      </div>\n      <div className=\"textfieldContainer\">\n        <label className=\"label\" aria-label=\"Subject of email\">\n          <b>Subject:</b>\n        </label>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={subject}\n          placeholder=\"Enter subject of email here\"\n          onChange={(event) => setSubject(event.target.value)}\n        />\n      </div>\n      <div className=\"textfieldContainer\">\n        <label className=\"label\" aria-label=\"Write your email here\">\n          <b>Draft Email</b>\n        </label>\n        <textarea\n          type=\"text\"\n          className=\"draftEmail\"\n          value={body}\n          placeholder=\"Draft your email here\"\n          onChange={(event) => setBody(event.target.value)}\n        />\n      </div>\n      <div className=\"buttonContainer\">\n        <button\n          aria-label=\"Send email\"\n          className=\"button\"\n          onClick={() => send({ subject, to, bcc, cc, body })}\n        >\n          Send\n        </button>\n        <button\n          aria-label=\"Save email as a draft\"\n          className=\"button\"\n          onClick={() => {\n            const id = email?.id\n            console.log(id)\n            saveDraft({ subject, to, bcc, cc, body, id })\n            history.push('/drafts')\n          }}\n        >\n          Save Draft\n        </button>\n      </div>\n    </div>\n  )\n}\n\nWriteEmail.propTypes = {\n  sendEmail: PropTypes.func.isRequired,\n  saveDraft: PropTypes.func.isRequired,\n  email: PropTypes.shape({\n    to: PropTypes.string,\n    cc: PropTypes.string,\n    bcc: PropTypes.string,\n    subject: PropTypes.string,\n    body: PropTypes.string,\n  }), //optional\n  emails: PropTypes.array,\n}\n\nexport default WriteEmail\n","export default __webpack_public_path__ + \"static/media/logo.baf30cc0.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useParams } from 'react-router-dom'\nimport './ReadEmail.css'\n\nconst ReadEmail = ({ emails }) => {\n  const { id } = useParams()\n  const [email] = emails.filter((email) => email.id === Number(id))\n  return (\n    <div>\n      {' '}\n      {/* <profile?> */}\n      <div className=\"metadata\">\n        <h2 aria-label={`From: ${email?.from}`}>From: {email?.from}</h2>\n        <h2 aria-label={`Subject: ${email?.subject}`}>Subject: {email?.subject}</h2>\n    </div>\n      <textarea className=\"emailBody\" aria-label={`${email?.body}`}>{email?.body}</textarea>\n    </div>\n\n  )\n}\n\nReadEmail.propTypes = {\n  emails: PropTypes.array.isRequired,\n}\n\nexport default ReadEmail\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Divider from '@material-ui/core/Divider'\nimport EmailIcon from '@material-ui/icons/Email'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport EditIcon from '@material-ui/icons/Edit'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles(() => ({\n  dividerColor: {\n    backgroundColor: '#aaaaaa',\n  },\n  selectedItemStyle: {\n    color: '#fb6949',\n    backgroundColor: '#c9fdff',\n  },\n  listItemText: {\n    fontSize: '20px',\n  },\n}))\n\nfunction SideNav() {\n  const classes = useStyles()\n  const page = window.location.pathname.substring(1)\n  console.log(page)\n  const [selectedIndex, setSelectedIndex] = React.useState(page)\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index)\n  }\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <Divider className={classes.dividerColor} />\n          <ListItem\n            component={Link}\n            to=\"/new\"\n            button\n            classes={{ selected: classes.selectedItemStyle }}\n            selected={selectedIndex === 'new'}\n            onClick={(event) => handleListItemClick(event, 'new')}\n          >\n            <ListItemIcon>\n              <EditIcon />\n            </ListItemIcon>\n            <ListItemText\n              aria-label=\"Create a new message\"\n              classes={{ primary: classes.listItemText }}\n              primary=\"NewMessage\"\n            />\n          </ListItem>\n          <Divider className={classes.dividerColor} />\n          <ListItem\n            component={Link}\n            to=\"/\"\n            button\n            classes={{ selected: classes.selectedItemStyle }}\n            selected={selectedIndex === 'inbox'}\n            onClick={(event) => handleListItemClick(event, 'inbox')}\n          >\n            <ListItemIcon>\n              <EmailIcon />\n            </ListItemIcon>\n            <ListItemText\n              aria-label=\"Inbox\"\n              classes={{ primary: classes.listItemText }}\n              primary=\"Inbox\"\n            />\n          </ListItem>\n          <Divider className={classes.dividerColor} />\n          <ListItem\n            component={Link}\n            to=\"/trash\"\n            classes={{ selected: classes.selectedItemStyle }}\n            button\n            selected={selectedIndex === 'trash'}\n            onClick={(event) => handleListItemClick(event, 'trash')}\n          >\n            <ListItemIcon>\n              <DeleteIcon />\n            </ListItemIcon>\n            <ListItemText\n              aria-label=\"Trash\"\n              classes={{ primary: classes.listItemText }}\n              primary=\"Trash\"\n            />\n          </ListItem>\n          <Divider className={classes.dividerColor} />\n          <ListItem\n            component={Link}\n            to=\"/spam\"\n            classes={{ selected: classes.selectedItemStyle }}\n            button\n            selected={selectedIndex === 'spam'}\n            onClick={(event) => handleListItemClick(event, 'spam')}\n          >\n            <ListItemIcon>\n              <ErrorIcon />\n            </ListItemIcon>\n            <ListItemText\n              aria-label=\"Spam\"\n              classes={{ primary: classes.listItemText }}\n              primary=\"Spam\"\n            />\n          </ListItem>\n          <Divider className={classes.dividerColor} />\n          <ListItem\n            component={Link}\n            to=\"/drafts\"\n            classes={{ selected: classes.selectedItemStyle }}\n            button\n            selected={selectedIndex === 'drafts'}\n            onClick={(event) => handleListItemClick(event, 'drafts')}\n          >\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n            <ListItemText\n              aria-label=\"Saved Drafts\"\n              classes={{ primary: classes.listItemText }}\n              primary=\"Saved Drafts\"\n            />\n          </ListItem>\n          <Divider className={classes.dividerColor} />\n        </List>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default SideNav\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport hardcodedEmails from './hardcodedEmails'\nimport EmailList from './components/EmailList'\nimport WriteEmail from './components/pages/WriteEmail'\nimport useEmails from './useEmails'\nimport logo from './components/layout/logo.png'\nimport ReadEmail from './components/pages/ReadEmail.js'\n\nimport './App.css'\nimport SideNav from './components/layout/SideNav'\n\nconst App = () => {\n\n  // because we haven't used redux,, little ugly\n  const {\n    emails,\n    moveToTrash,\n    selectEmail,\n    allSelected,\n    saveDraft,\n    grabPage,\n    selectedToTrash,\n    selectedToInbox,\n    toggleSelectAll,\n    selectedToSpam,\n    permaDeleteEmail,\n    permaDeleteSelected,\n  } = useEmails(hardcodedEmails)\n\n  return (\n    <Router>\n      <div className=\"app\" aria-label=\"Welcome to Determined Mail\">\n        <div className=\"header\">\n          <header className=\"header\">\n            <h1>Determined Mail</h1>\n            <div className=\"logo\" aria-label=\"Determined Mail logo, magnifying glass with letter envelope inside\">\n              <img src={logo} alt=\"logo\" height=\"80\" width=\"80\" />\n            </div>\n          </header>\n        </div>\n        <div className=\"SideNav\">\n          <SideNav />\n        </div>\n        <div className=\"email-viewport\">\n          {/* The view email list pages */}\n          <Route exact path=\"/\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Main Inbox\">\n                {'Inbox'}\n                <input\n                  aria-label=\"Select all emails in main inbox\"\n                  className=\"select\"\n                  type=\"checkbox\"\n                  id=\"selectAll\"\n                  checked={allSelected('inbox')}\n                  onChange={() => {\n                    const selected = !allSelected('inbox')\n                    toggleSelectAll('inbox', selected)\n                  }}\n                />{' '}\n                <button\n                  className=\"discard-button\"\n                  onClick={() => {\n                    selectedToTrash()\n                  }}\n                  aria-label=\"Move to trash\"\n                >\n                  Trash\n                </button>\n                <button\n                  className=\"mark-spam-button\"\n                  onClick={() => {\n                    selectedToSpam()\n                  }}\n                  aria-label=\"Move to spam\"\n                >\n                  Move to Spam\n                </button>\n              </header>\n\n              <EmailList\n                emails={grabPage('inbox')}\n                deleteEmail={moveToTrash}\n                selectEmail={selectEmail}\n              />\n            </div>\n          </Route>\n          <Route path=\"/spam\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Spam\">\n                {'Spam'}\n                <input\n                  aria-label=\"Select all emails in spam\"\n                  className=\"select\"\n                  type=\"checkbox\"\n                  id=\"selectAll\"\n                  checked={allSelected('spam')}\n                  onChange={() => {\n                    const selected = !allSelected('spam')\n                    toggleSelectAll('spam', selected)\n                  }}\n                />{' '}\n                <button\n                  className=\"discard-button\"\n                  onClick={() => {\n                    selectedToTrash()\n                  }}\n                  aria-label=\"Move to trash\"\n                >\n                  Trash\n                </button>\n              </header>\n              <EmailList\n                emails={grabPage('spam')}\n                deleteEmail={moveToTrash}\n                selectEmail={selectEmail}\n              />\n            </div>\n          </Route>\n          <Route path=\"/trash\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Trash\">\n                {'Trash'}\n                <input\n                  aria-label=\"Select all emails in trash\"\n                  className=\"select\"\n                  type=\"checkbox\"\n                  id=\"selectAll\"\n                  checked={allSelected('deleted')}\n                  onChange={() => {\n                    const selected = !allSelected('deleted')\n                    toggleSelectAll('deleted', selected)\n                  }}\n                />{' '}\n                <button\n                  className=\"discard-button\"\n                  onClick={() => {\n                    permaDeleteSelected()\n                  }}\n                  aria-label=\"Permanently delete\"\n                >\n                  Delete\n                </button>\n                <button\n                  className=\"mark-spam-button\"\n                  onClick={() => {\n                    selectedToInbox()\n                  }}\n                  aria-label=\"Move to inbox\"\n                >\n                  Move to inbox\n                </button>\n              </header>\n              <EmailList\n                emails={grabPage('deleted')}\n                deleteEmail={permaDeleteEmail}\n                selectEmail={selectEmail}\n              />\n            </div>\n          </Route>\n          <Route path=\"/drafts\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Drafts\">\n                <div className=\"savedDrafts\"> Saved Drafts</div>\n                <input\n                  aria-label=\"Select all emails in drafts\"\n                  className=\"select\"\n                  type=\"checkbox\"\n                  id=\"selectAll\"\n                  checked={allSelected('draft')}\n                  onChange={() => {\n                    const selected = !allSelected('draft')\n                    toggleSelectAll('draft', selected)\n                  }}\n                />\n                <button\n                  className=\"discard-button\"\n                  onClick={() => {\n                    permaDeleteSelected()\n                  }}\n                  aria-label=\"Permanently delete\"\n                >\n                  Trash\n                </button>\n              </header>\n              <EmailList\n                emails={grabPage('draft')}\n                deleteEmail={permaDeleteEmail}\n                selectEmail={selectEmail}\n              />\n            </div>\n          </Route>\n          {/* The write email page */}\n          <Route exact path=\"/new\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Write an email\">{'New Message'}</header>\n            </div>\n            <WriteEmail\n              sendEmail={(newEmail) => console.log(newEmail)}\n              saveDraft={saveDraft}\n            />\n          </Route>\n          <Route path=\"/new/:id\">\n            <div className=\"EmailList\">\n              <header className=\"page-header\" aria-label=\"Edit draft\">{'Edit Draft'}</header>\n            </div>\n\n            <WriteEmail\n              sendEmail={(newEmail) => console.log(newEmail)}\n              saveDraft={saveDraft}\n              emails={emails}\n            />\n          </Route>\n          <Route path=\"/email/:id\">\n            <ReadEmail emails={emails} />\n          </Route>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import { useState } from 'react'\n\n//spam, delete, draft, add in general,\nexport default (initialValue) => {\n  const [emails, setEmails] = useState(initialValue)\n\n  const permaDeleteEmail = (key)=>{\n    setEmails(emails.filter((email) => email.id !== key))\n  }\n\n  return {\n    emails,\n    setEmails,\n\n    allSelected: (page) => {\n      if(emails.filter((email) => email.page === page).length ===0) return false;\n      return(emails.filter((email)=> (!email.selected) && (email.page===page)).length === 0)\n    },\n\n    grabPage: (page) => {\n      return emails.filter((email)=> email.page === page)\n    },\n\n    moveToTrash: (key) => {\n      //really just move to deleted page (perma delete is below)\n      setEmails(emails.map((email) => {\n        if(email.id===key){\n          email.page = 'deleted'\n          email.selected = false\n        }\n        return email;\n      }))\n    },\n\n    permaDeleteEmail: permaDeleteEmail,\n\n    permaDeleteSelected: () => {\n      setEmails(emails.filter((email) => email.selected !== true))\n    },\n\n    selectEmail: (key) => {\n      setEmails(\n        emails.map((email) => {\n          if (email.id === key) {\n            email.selected = !email.selected\n          }\n          return email\n        })\n      )\n    },\n\n    toggleSelectAll: (page, newState) => {\n      setEmails(emails.map((email)=>{\n        if(email.page === page){\n          email.selected = newState\n        }\n        return email\n      }))\n    },\n\n    selectedToSpam: () => {\n      setEmails(\n        emails.map((email) => {\n          if (email.selected) {\n            email.page = 'spam'\n            email.selected = false\n          }\n          return email;\n        })\n      )\n    },\n\n    selectedToTrash: () => {\n      setEmails(\n        emails.map((email) => {\n          if (email.selected) {\n            email.page = 'deleted'\n            email.selected = false\n          }\n          return email;\n        })\n      )\n    },\n\n    selectedToInbox: () => {\n      setEmails(\n        emails.map((email) => {\n          if (email.selected) {\n            email.page = 'inbox'\n            email.selected = false\n          }\n          return email;\n        })\n      )\n    },\n\n    saveDraft: (newEmail) => {\n      let draftEmail = { ...newEmail }\n      draftEmail.selected = false\n      draftEmail.page = 'draft'\n      if(!draftEmail.id){\n        draftEmail.id = Date.now()\n        setEmails([...emails, draftEmail])\n      } else { \n        setEmails(\n          emails.map((email)=>{\n            if(email.id === draftEmail.id){\n              email = {...draftEmail}\n            }\n            return email\n          })\n        )\n      }\n      \n    },\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}